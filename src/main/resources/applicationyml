server:
  port: 0

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring :
  application:
    name: sj-shop-service
  data:
    redis:
      host: localhost
      port: 6379
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sj_shop_service?useSSL=false&allowPublicKeyRetrieval=true
    username: song
    password: '0000'
  jpa:
    database: mysql
    #    InnoDB??
    database-platform: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: create
    show_sql: true
    open-in-view: false
    properties:
      hibernate:
        default_batch_fetch_size: 300
  kafka:
    kafka-server: localhost:9092
    consumer:
      # group-id 는 컨슈머 그룹을 식별하는 id 로서, 동일한 그룹 id 를 가진 컨슈머들은 메시지를 분담해서 consume
      # 만약 여러 컨슈머가 다른 group-id 를 가지고 한 topic 을 리슨하면 각기 메시지를 수신하여 메시지 전파 효과 발생
      group-id: shop-group
      # 카프카내에 들어와 있는 메시지 중에 처음 들어와 있는 메시지부터 읽기 시작(latest: 현시점 이후로 들어오는 메시지만 read)
      auto-offset-reset: earliest

file:
  dir: /Users/song/Desktop/study/SPRING-PROJECT/image-file/